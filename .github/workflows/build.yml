---
name: Build & Deploy

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

#      - name: Generate banners
#        uses: isbang/compose-action@v2.3.0
#        with:
#          compose-file: |
#            ./docker-compose.yaml
#            ./docker-compose.once.yaml
#          up-flags: "--abort-on-container-exit --exit-code-from=genbanners"
#          services: |-
#            hugo
#            ws-screenshot
#            genbanners

      - name: Build the deployment hugo artifact
        uses: docker://hugomods/hugo:0.147.8
        with:
          args: build --minify

      - uses: actions/upload-artifact@v4
        with:
          name: public
          path: public/
          retention-days: 1
          if-no-files-found: error

  deployment:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    environment: production
    needs: [build]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v5
        with:
          name: public
          path: public/

      - name: Add SSH key
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p /home/runner/.ssh
          ssh-keyscan the.padded.cell.sanitarium.se >> /home/runner/.ssh/known_hosts
          echo "${{ secrets.DEPLOY_SSH }}" > /home/runner/.ssh/github_actions
          chmod 600 /home/runner/.ssh/github_actions
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null   
          ssh-add /home/runner/.ssh/github_actions

      - name: Deploy
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
          CLOUDFLARE_ZONE_ID: "${{ secrets.CLOUDFLARE_ZONE_ID }}"
          CLOUDFLARE_API_TOKEN: "${{ secrets.CLOUDFLARE_API_TOKEN }}"
        run: script/deploy
